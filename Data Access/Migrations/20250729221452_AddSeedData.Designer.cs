// <auto-generated />
using System;
using Data_Access.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250729221452_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CatOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MarkedAsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatName = "Electronics",
                            CatOrder = 1,
                            CreatedDate = new DateTime(2025, 7, 29, 22, 14, 51, 346, DateTimeKind.Utc).AddTicks(6501),
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CatName = "Books",
                            CatOrder = 2,
                            CreatedDate = new DateTime(2025, 7, 29, 22, 14, 51, 346, DateTimeKind.Utc).AddTicks(6503),
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CatName = "Computers",
                            CatOrder = 3,
                            CreatedDate = new DateTime(2025, 7, 29, 22, 14, 51, 346, DateTimeKind.Utc).AddTicks(6505),
                            MarkedAsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CatName = "Phones",
                            CatOrder = 4,
                            CreatedDate = new DateTime(2025, 7, 29, 22, 14, 51, 346, DateTimeKind.Utc).AddTicks(6506),
                            MarkedAsDeleted = false
                        });
                });

            modelBuilder.Entity("Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("BookPrice");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "ahmed",
                            CategoryId = 1,
                            Description = "test01",
                            Price = 450.0,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Author = "muhammad",
                            CategoryId = 3,
                            Description = "test02",
                            Price = 150.0,
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 3,
                            Author = "kareem",
                            CategoryId = 3,
                            Description = "test03",
                            Price = 320.0,
                            Title = "PC"
                        },
                        new
                        {
                            Id = 4,
                            Author = "mido",
                            CategoryId = 3,
                            Description = "test04",
                            Price = 630.0,
                            Title = "PC"
                        },
                        new
                        {
                            Id = 5,
                            Author = "hamda",
                            CategoryId = 2,
                            Description = "test05",
                            Price = 240.0,
                            Title = "BOOK"
                        },
                        new
                        {
                            Id = 6,
                            Author = "mahmoud",
                            CategoryId = 2,
                            Description = "test06",
                            Price = 50.0,
                            Title = "BOOK"
                        },
                        new
                        {
                            Id = 7,
                            Author = "abdullah",
                            CategoryId = 1,
                            Description = "test07",
                            Price = 10.0,
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 8,
                            Author = "alaa",
                            CategoryId = 1,
                            Description = "test08",
                            Price = 100.0,
                            Title = "Mobile"
                        },
                        new
                        {
                            Id = 9,
                            Author = "abdulrahman",
                            CategoryId = 2,
                            Description = "test09",
                            Price = 270.0,
                            Title = "Laptop"
                        });
                });

            modelBuilder.Entity("Models.Entities.Product", b =>
                {
                    b.HasOne("Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
